{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstant.js","reducers/index.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","actions/productAction.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/screens/ProductCarousel.js","components/screens/HomeScreen.js","components/screens/ProductScreen.js","actions/cartActions.js","components/screens/CartScreen.js","containers/FormContainer.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","components/screens/ProfileScreen.js","actions/orderActions.js","components/CheckOutSteps.js","components/screens/ShippingScreen.js","components/screens/PaymentScreen.js","components/screens/PlaceOrderScreen.js","components/screens/OrderScreen.js","components/screens/UserListScreen.js","components/screens/UserEditScreen.js","components/screens/ProductListScreen.js","components/screens/ProductCreateScreen.js","components/screens/ProductEditScreen.js","components/screens/OrderListScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEWS_REQUEST","PRODUCT_CREATE_REVIEWS_SUCCESS","PRODUCT_CREATE_REVIEWS_FAIL","PRODUCT_CREATE_REVIEWS_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_ADMIN_UPDATE_REQUEST","USER_ADMIN_UPDATE_SUCCESS","USER_ADMIN_UPDATE_FAIL","USER_ADMIN_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_SUCCESS","ORDER_DELIVERED_FAIL","ORDER_DELIVERED_RESET","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdate","userDelete","userList","users","userAdminUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDelivered","SearchBox","useState","keyword","setKeyword","history","useHistory","useEffect","push","location","pathname","Form","inline","Control","name","placeholder","value","onChange","e","target","className","id","dispatch","getState","a","access","token","axios","get","headers","Authorization","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","variant","collapseOnSelect","expand","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Footer","Row","Col","listProducts","listProductDetails","Rating","text","color","rateColor","value1","value2","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","ProductCarousel","loadingTopRated","errorTopRated","productsTopRated","Carousel","interval","pause","Image","alt","fluid","Caption","HomeScreen","search","console","log","renderProducts","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","productsDetails","ListGroup","description","countInStock","sx","event","Array","keys","Button","block","disabled","length","review","ley","createdAt","substring","onSubmit","productId","preventDefault","post","Group","controlId","Label","row","disable","addToCart","setItem","JSON","stringify","CartScreen","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","userDetail","loadingOrders","errorOrders","put","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckOutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","goback","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","loadingPay","successPay","successDelivered","config","reference","Date","getTime","amount","parseInt","publicKey","paystackSuccess","paymentResult","componentProps","onSuccess","onClose","href","isDelivered","deliveredAt","deliveredOrder","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","getUserDetails","loadingDetails","errorDetails","successAdmin","loadingAdmin","errorAdmin","datas","ProductListScreen","deleteProduct","category","brand","ProductCreateScreen","setBrand","setCategory","setDescription","setPrice","setCountInStock","setImage","loadingCreate","createdProduct","successCreate","errorCreate","ProductEditScreen","uploadingImage","setUploadingImage","loadingUpdate","successUpdate","errorUpdate","productDetail","uploadFileHandler","file","files","formData","FormData","append","File","custom","OrderListScreen","App","path","exact","component","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","initalState","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b45752d.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEWS_REQUEST = 'PRODUCT_CREATE_REVIEWS_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEWS_SUCCESS = 'PRODUCT_CREATE_REVIEWS_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEWS_FAIL = 'PRODUCT_CREATE_REVIEWS_FAIL'\r\nexport const PRODUCT_CREATE_REVIEWS_RESET = 'PRODUCT_CREATE_REVIEWS_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = \"CART_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\"\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\"\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\"\r\n\r\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\"","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\"\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\"\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\"\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\"\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\"\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\"\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\"\r\n\r\nexport const USER_ADMIN_UPDATE_REQUEST = \"USER_ADMIN_UPDATE_REQUEST\"\r\nexport const USER_ADMIN_UPDATE_SUCCESS = \"USER_ADMIN_UPDATE_SUCCESS\"\r\nexport const USER_ADMIN_UPDATE_FAIL = \"USER_ADMIN_UPDATE_FAIL\"\r\nexport const USER_ADMIN_UPDATE_RESET = \"USER_ADMIN_UPDATE_RESET\"\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET'\r\n\r\nexport const ORDER_DELIVERED_REQUEST = 'ORDER_DELIVERED_REQUEST'\r\nexport const ORDER_DELIVERED_SUCCESS = 'ORDER_DELIVERED_SUCCESS'\r\nexport const ORDER_DELIVERED_FAIL = 'ORDER_DELIVERED_FAIL'\r\nexport const ORDER_DELIVERED_RESET = 'ORDER_DELIVERED_RESET'","import { combineReducers } from 'redux'\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './productReducer'\r\n\r\nimport {cartReducer} from './cartReducer'\r\n\r\nimport {\r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer,\r\n    userUpdateReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userAdminUpdateReducer,\r\n} from './userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliveredReducer,\r\n} from './orderReducers'\r\n\r\nexport default combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userDelete: userDeleteReducer,\r\n    userList: userListReducer,\r\n    userAdminUpdate: userAdminUpdateReducer,\r\n    \r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDelivered: orderDeliveredReducer, \r\n})","import { \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_REQUEST,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DETAILS_RESET,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEWS_REQUEST,\r\n    PRODUCT_CREATE_REVIEWS_SUCCESS,\r\n    PRODUCT_CREATE_REVIEWS_FAIL,\r\n    PRODUCT_CREATE_REVIEWS_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state={products:[]}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            // return {loading:true, products:[]}\r\n            return {...state, loading:true, products:[]}\r\n        \r\n        case PRODUCT_LIST_SUCCESS:\r\n            // return {loading:false, products: action.payload}\r\n            return {...state, loading:false, products: action.payload}\r\n        \r\n        case PRODUCT_LIST_FAIL:\r\n            // return {loading:false, error: action.payload}\r\n            return {...state, loading:false, error: action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state={product: {reviews:[]}}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n        \r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {...state, loading:false, product: action.payload}\r\n        \r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {...state, loading:false, error: action.payload}\r\n        \r\n        case PRODUCT_DETAILS_RESET:\r\n            return {product: {}}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading:false, success:true}\r\n        \r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading:false, success:true, product:action.payload}\r\n        \r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state={product: {}}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading:true, product: {}}\r\n        \r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading:false, success:true, product:action.payload}\r\n        \r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product: {}}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REVIEWS_REQUEST:\r\n            return {loading:true, product: {}}\r\n        \r\n        case PRODUCT_CREATE_REVIEWS_SUCCESS:\r\n            return {loading:false, success:true}\r\n        \r\n        case PRODUCT_CREATE_REVIEWS_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        case PRODUCT_CREATE_REVIEWS_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state={ products: []}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading:true, products: []}\r\n        \r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading:false, products: action.payload}\r\n        \r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state={cartItems:[], shippingAddress: {}}, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {...state, cartItems: state.cartItems.map(x => \r\n                    x.product === existItem.product ? item : x\r\n                )}\r\n            }else {\r\n                return {...state, cartItems: [...state.cartItems, item]}\r\n            }\r\n        \r\n        case CART_REMOVE_ITEM:\r\n            return {...state, cartItems:state.cartItems.filter(x => x.product !== action.payload)}\r\n        \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {...state, shippingAddress: action.payload}\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {...state, paymentMethod: action.payload}\r\n            \r\n        case CART_CLEAR_ITEMS:\r\n            return {...state, cartItems:[]}\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST, USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS, \r\n    \r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST, USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_REQUEST, USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS, USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_REQUEST, USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS, USER_UPDATE_RESET,\r\n\r\n    USER_LIST_REQUEST, USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS, USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST, USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n\r\n    USER_ADMIN_UPDATE_REQUEST, USER_ADMIN_UPDATE_FAIL, \r\n    USER_ADMIN_UPDATE_SUCCESS, USER_ADMIN_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return state={loading:true}\r\n        \r\n        case USER_LOGIN_SUCCESS:\r\n            return state={loading:false, userInfo: action.payload}\r\n        \r\n        case USER_LOGIN_FAIL:\r\n            return state={loading: false, error: action.payload}\r\n        \r\n        case USER_LOGOUT:\r\n            return state={}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return state={loading:true}\r\n        \r\n        case USER_REGISTER_SUCCESS:\r\n            return state={loading:false, userInfo: action.payload}\r\n        \r\n        case USER_REGISTER_FAIL:\r\n            return state={loading: false, error: action.payload}\r\n        \r\n        case USER_LOGOUT:\r\n            return state={}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state={ user: {}}, action) => {\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return state={loading:false}\r\n        \r\n        case USER_DETAILS_SUCCESS:\r\n            return state={loading:false, user: action.payload}\r\n        \r\n        case USER_DETAILS_FAIL:\r\n            return state={loading: false, error: action.payload}\r\n        \r\n        case USER_DETAILS_RESET:\r\n            return state={user: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state={ user: {}}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return state={loading:true, user: {}}\r\n        \r\n        case USER_UPDATE_SUCCESS:\r\n            return state={loading:false, success:true, user: action.payload}\r\n        \r\n        case USER_UPDATE_FAIL:\r\n            return state={loading:false, error: action.payload}\r\n        \r\n        case USER_UPDATE_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state={ users: []}, action) => {\r\n    switch(action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return state={loading:true, users: []}\r\n        \r\n        case USER_LIST_SUCCESS:\r\n            return state={loading:false, users: action.payload}\r\n        \r\n        case USER_LIST_FAIL:\r\n            return state={loading:false, error: action.payload}\r\n        \r\n        case USER_LIST_RESET:\r\n            return { users: []}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return state={loading:true}\r\n        \r\n        case USER_DELETE_SUCCESS:\r\n            return state={loading:false, success:true}\r\n        \r\n        case USER_DELETE_FAIL:\r\n            return state={loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userAdminUpdateReducer = (state={ user: {}}, action) => {\r\n    switch(action.type) {\r\n        case USER_ADMIN_UPDATE_REQUEST:\r\n            return state={loading:true, user: {}}\r\n        \r\n        case USER_ADMIN_UPDATE_SUCCESS:\r\n            return state={loading:false, success:true, user: action.payload}\r\n        \r\n        case USER_ADMIN_UPDATE_FAIL:\r\n            return state={loading:false, error: action.payload}\r\n        \r\n        case USER_ADMIN_UPDATE_RESET:\r\n            return { user:{} }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVERED_REQUEST,\r\n    ORDER_DELIVERED_SUCCESS,\r\n    ORDER_DELIVERED_FAIL,\r\n    ORDER_DELIVERED_RESET,\r\n} from '../constants/orderConstant'\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case ORDER_CREATE_SUCCESS:\r\n            return {loading:false, success:true, order:action.payload}\r\n        \r\n        case ORDER_CREATE_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailReducer = (state={loading:true, orderItems:[], order:{}, shippingAddress:{}}, action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {...state, loading:true}\r\n        \r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {loading:false, success:true, order:action.payload}\r\n        \r\n        case ORDER_DETAILS_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case ORDER_PAY_SUCCESS:\r\n            return {loading:false, success:true}\r\n        \r\n        case ORDER_PAY_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state={ orders:[]}, action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {loading:false, success:true, orders:action.payload}\r\n        \r\n        case ORDER_LIST_MY_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        case ORDER_LIST_MY_RESET:\r\n            return {orders:[]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state={ orders:[]}, action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case ORDER_LIST_SUCCESS:\r\n            return {loading:false, success:true, orders:action.payload}\r\n        \r\n        case ORDER_LIST_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliveredReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case ORDER_DELIVERED_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case ORDER_DELIVERED_SUCCESS:\r\n            return {loading:false, success:true}\r\n        \r\n        case ORDER_DELIVERED_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        \r\n        case ORDER_DELIVERED_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Button, Form} from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst SearchBox = () => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(keyword){\r\n            history.push(`/?keywords=${keyword}`)\r\n        }else{\r\n            history.push(history.push(history.push(history.location.pathname)))\r\n        }\r\n    },[keyword, history])\r\n\r\n    return (\r\n        <Form inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                placeholder='Search'\r\n                value={keyword}\r\n                onChange={e => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\n\r\nimport { \r\n    USER_LOGIN_REQUEST, USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS, \r\n    \r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST, USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_REQUEST, USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS, USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_REQUEST, USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n\r\n    USER_LIST_REQUEST, USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS, USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST, USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n\r\n    USER_ADMIN_UPDATE_REQUEST, USER_ADMIN_UPDATE_FAIL, \r\n    USER_ADMIN_UPDATE_SUCCESS,\r\n} from '../constants/userConstants'\r\n\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstant'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.post('/api/users/login/', \r\n            { 'username': email, 'password': password}, \r\n            {headers: {\r\n                'Content-type': 'application/json'\r\n            }}\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data))\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('UserInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.post('/api/users/register/', \r\n            {'name': name, 'email': email, 'password': password}, \r\n            {headers: {\r\n                'Content-type': 'application/json'\r\n            }}\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem(\"userRegisterInfo\", JSON.stringify(data))\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const userDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const access = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.get(`/api/users/${id}/`, {\r\n            headers: {\r\n                \"Content-type\": 'application/json',\r\n                Authorization: `Bearer ${access}`,\r\n            }\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const userUpdate = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: USER_UPDATE_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.put(`/api/users/profile/update/`, user, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: USER_UPDATE_SUCCESS, payload: data})\r\n        dispatch({type: USER_LOGIN_SUCCESS, payload: data})\r\n\r\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data))\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUser = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: USER_LIST_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.get(`/api/users/`, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: USER_LIST_SUCCESS, payload: data})\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: USER_DELETE_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.delete(`/api/users/delete/${id}/`, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: USER_DELETE_SUCCESS, payload: data})\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const adminUpdateUser = (datas) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: USER_ADMIN_UPDATE_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.put(`/api/users/update/${datas._id}/`, datas, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: USER_ADMIN_UPDATE_SUCCESS})\r\n        dispatch({type: USER_DETAILS_SUCCESS, payload:data})\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_ADMIN_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"lg\">\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Gadget Kiosk</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-shopping-cart\"></i>\r\n                                    Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ): (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>\r\n                                        <i className=\"fas fa-user\"></i>\r\n                                        Login\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                                )\r\n                            }\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Gadget Kiosk</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_REQUEST,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEWS_REQUEST,\r\n    PRODUCT_CREATE_REVIEWS_SUCCESS,\r\n    PRODUCT_CREATE_REVIEWS_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n        try {\r\n            dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n            const {data} = await axios.get(`/api/products${keyword}`)\r\n            \r\n            dispatch({\r\n                type: PRODUCT_LIST_SUCCESS, \r\n                payload: data\r\n            })\r\n        }catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_LIST_FAIL, \r\n                payload: error.message,\r\n            })\r\n        }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const {data} = await axios.get('/api/products/top/')\r\n        \r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS, \r\n            payload: data\r\n        })\r\n    }catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL, \r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS, \r\n            payload: data\r\n        })\r\n    }catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL, \r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: PRODUCT_DELETE_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.delete(`/api/products/delete/${id}/`, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n\r\n        dispatch({type: PRODUCT_DELETE_SUCCESS, payload:data})\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = (product) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: PRODUCT_CREATE_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.post('/api/products/create/', product , {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n\r\n        dispatch({type: PRODUCT_CREATE_SUCCESS, payload:data})\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: PRODUCT_UPDATE_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.put(`/api/products/update/${product._id}/`, product, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: PRODUCT_UPDATE_SUCCESS, payload:data})\r\n        // dispatch({type: PRODUCT_DETAILS_SUCCESS, payload:data})\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: PRODUCT_CREATE_REVIEWS_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.post(`/api/products/${productId}/reviews/`, review, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: PRODUCT_CREATE_REVIEWS_SUCCESS, payload:data})\r\n        // dispatch({type: PRODUCT_DETAILS_SUCCESS, payload:data})\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEWS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    const rateColor = (value1, value2) => {\r\n        return value >= value1 ? 'fas fa-star': value >= value2 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n    }\r\n\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={rateColor(1,0.5)} style={{color}}></i>\r\n            </span>\r\n            <span>\r\n                <i className={rateColor(2,1.5)} style={{color}}></i>\r\n            </span>\r\n            <span>\r\n                <i className={rateColor(3,2.5)} style={{color}}></i>\r\n            </span>\r\n            <span>\r\n                <i className={rateColor(4,3.5)} style={{color}}></i>\r\n            </span>\r\n            <span>\r\n                <i className={rateColor(5,4.5)} style={{color}}></i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image}/>\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                \r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating \r\n                            value={product.rating} \r\n                            text={`${product.numReviews} reviews`} \r\n                            color={'#f8e825'}\r\n                        />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n            animation=\"border\" \r\n            role=\"status\" \r\n            variant=\"secondary\"\r\n            style={{\r\n                height:'100px',\r\n                width: '100px',\r\n                margin: '0px auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'></span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return(\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Carousel, Image} from 'react-bootstrap'\r\n\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\nimport { listTopProducts } from '../../actions/productAction'\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {loading:loadingTopRated, error:errorTopRated, products:productsTopRated} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n    return (\r\n        loadingTopRated ? <Loader/> \r\n        : errorTopRated ? <Message variant='danger'>{errorTopRated}</Message>\r\n        : (\r\n            <Carousel interval={3000} pause='hover' className='bg-dark'>\r\n                {productsTopRated.map((product) => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                            <Carousel.Caption className='carousel.caption'>\r\n                                <h4>{product.name} (${product.price})</h4>\r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n        )\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {listProducts} from '../../actions/productAction'\r\nimport Product from '../../components/Product'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\nimport ProductCarousel from '../../components/screens/ProductCarousel'\r\n\r\nconst HomeScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products} = productList\r\n\r\n    let keyword = history.location.search\r\n    console.log(keyword)\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n\r\n    const renderProducts = products.map((product) => {\r\n        return (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product}/>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <h2><Loader /></h2> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                <div>\r\n                {!keyword && <ProductCarousel />}\r\n                    <Row>\r\n                    <h1>Latest Products</h1>\r\n                        {renderProducts}\r\n                    </Row>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\n\r\nimport Rating from '../Rating'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\nimport {listProductDetails, createProductReview} from '../../actions/productAction'\r\nimport { PRODUCT_DETAILS_RESET, PRODUCT_CREATE_REVIEWS_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductScreen = ({match, history}) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading:loadingProductReview, \r\n        error:errorProductReview, \r\n        success:successProductReview} = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:  PRODUCT_CREATE_REVIEWS_RESET})\r\n\r\n        }\r\n        dispatch({type: PRODUCT_DETAILS_RESET})\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match.params.id, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    const productsDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productsDetails\r\n    \r\n    return (\r\n        <div>\r\n            {loading ? <h2><Loader /></h2> : error ? <Message variant='danger'>{error}</Message>\r\n                :<div>\r\n                    <Link to='/' className='btn btn-dark my-3'>Go Back</Link>\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                    </ListGroup.Item>\r\n                                    \r\n                                    <ListGroup.Item>\r\n                                        Price: ${product.price}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price: </Col>\r\n                                                <Col> \r\n                                                    <strong>${product.price}</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status: </Col>\r\n                                                <Col> \r\n                                                    {product.countInStock === 0 || product.countInStock === ''? 'Out of Stock' : 'In Stock'}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* Quantity Selection */}\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty</Col>\r\n                                                    <Col sx='auto' className='my-1'>\r\n                                                        <Form>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(event) => {setQty(event.target.value)}}\r\n                                                            >\r\n                                                                {\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => {\r\n                                                                        return (\r\n                                                                            <option key={x + 1} value={x + 1}>\r\n                                                                                {x + 1}\r\n                                                                            </option>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Form>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Button\r\n                                                    onClick={() => addToCartHandler()} \r\n                                                    block \r\n                                                    disabled={product.countInStock === 0 || product.countInStock === ''} \r\n                                                    type='button'>Add To Cart\r\n                                                </Button>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h2>Reviews</h2>\r\n                                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) => (\r\n                                        <ListGroup.Item ley={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825'/>\r\n                                            <p>{review.createdAt.substring(0,10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <h4>Write a review</h4>\r\n                                        {loadingProductReview && <Loader/>}\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                        \r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={rating}\r\n                                                        onChange={e => setRating(e.target.value)}\r\n                                                    >\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Review</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='5'\r\n                                                        value={comment}\r\n                                                        onChange={e => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Button\r\n                                                    disable={loadingProductReview}\r\n                                                    type='submit'\r\n                                                    variant='primary'\r\n                                                    className='mt-2'\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>\r\n                                        ) : (\r\n                                            <Message variant='info'>\r\n                                                Please <Link to='/login'>login</Link> to write a review\r\n                                            </Message>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            \r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM, \r\n        payload: {\r\n            product:data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty: qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem(\"ShippingAddress\", JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem(\"PaymentMethod\", JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\n\r\nimport Message from '../Message'\r\nimport { addToCart, removeFromCart } from '../../actions/cartActions'\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart )\r\n    const { cartItems } = cart\r\n    console.log(cartItems)\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n        \r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    } \r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your Cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => {\r\n                            return (<ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image alt={item.name} fluid rounded src={item.image} />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Form>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(event) => {dispatch(addToCart(item.product, Number(event.target.value)))}}\r\n                                            >\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map((x) => {\r\n                                                        return (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Form>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n\r\n                                            <i className ='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            )\r\n                        })}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc +(item.qty * item.price), 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item >\r\n                        <Button\r\n                            type='button'\r\n                            block\r\n                            disabled={cartItems.length === 0}\r\n                            onClick = {checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {login} from '../../actions/userActions'\r\nimport FormContainer from '../../containers/FormContainer'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    console.log(redirect)\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {loading, error, userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='mt-2' block type='submit' variant='primary'>\r\n                    SignIn\r\n                </Button>\r\n\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        New Customer? \r\n                        <Link \r\n                            to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                            Register\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {register} from '../../actions/userActions'\r\nimport FormContainer from '../../containers/FormContainer'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    console.log(redirect)\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='mt-2' block type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        Already Have an Account? \r\n                        <Link \r\n                            to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                            Sign In\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {userDetails, userUpdate} from '../../actions/userActions'\r\nimport {getMyListOrderDetails} from '../../actions/orderActions'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\nimport { USER_UPDATE_RESET } from '../../constants/userConstants'\r\n\r\nconst ProfileScreen = ({history}) => {\r\n    // const [username, setUsername] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDetail = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetail\r\n\r\n    const userProfileUpdate = useSelector(state => state.userUpdate)\r\n    const {success} = userProfileUpdate\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {orders, loading:loadingOrders, error:errorOrders} = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({type: USER_UPDATE_RESET})\r\n                dispatch(userDetails('profile'))\r\n                dispatch(getMyListOrderDetails())\r\n            }else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, user, userInfo, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(userUpdate({\r\n                'id':user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h3>User Profile</h3>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button className='mt-2' block type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h1>My Orders</h1>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='red'>{errorOrders}</Message>\r\n                ): (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <Link to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' block>\r\n                                                Details\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n\r\n    // const [name, setName] = useState('')\r\n    // const [email, setEmail] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    // const [confirmPassword, setConfirmPassword] = useState('')\r\n    // const [message, setMessage] = useState('')\r\n\r\n    // const userDetail = useSelector(state => state.userDetails)\r\n    // const {error, loading, user} = userDetail\r\n    // console.log(user.name)\r\n    \r\n    // const userLogin = useSelector(state => state.userLogin)\r\n    // const {userInfo} = userLogin\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    //     if(!userInfo) {\r\n    //         history.push('/login')\r\n    //     }else{\r\n    //         if(!user || user.name){\r\n    //             dispatch(userDetails('profile'))\r\n    //         }else{\r\n    //             setName(user.name)\r\n    //             setEmail(user.email)\r\n    //             console.log(\"hi\")\r\n    //         }\r\n    //     }\r\n    // },[history, userInfo, dispatch, user])\r\n\r\n    // const submitHandler = (e) => {\r\n    //     e.preventDefault()\r\n\r\n    //     if(password !== confirmPassword) {\r\n    //         setMessage('Passwords do not match')\r\n    //     } else {\r\n    //         dispatch(userUpdate('update'))\r\n    //     }\r\n    // }\r\n","import axios from 'axios'\r\n\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVERED_REQUEST,\r\n    ORDER_DELIVERED_SUCCESS,\r\n    ORDER_DELIVERED_FAIL,\r\n} from '../constants/orderConstant'\r\n\r\nimport { \r\n    CART_CLEAR_ITEMS\r\n} from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: ORDER_CREATE_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.post('/api/orders/add/', order, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: ORDER_CREATE_SUCCESS, payload: data})\r\n        dispatch({type: CART_CLEAR_ITEMS, payload:data})\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: ORDER_DETAILS_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.get(`/api/orders/${id}/`, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload:data})\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: ORDER_PAY_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.put(`/api/orders/${id}/pay/`, paymentResult, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: ORDER_PAY_SUCCESS, payload: data})\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getMyListOrderDetails = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: ORDER_LIST_MY_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.get('/api/orders/myorders/', {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: ORDER_LIST_MY_SUCCESS, payload:data})\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getListOrder = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: ORDER_LIST_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.get('/api/orders/', {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: ORDER_LIST_SUCCESS, payload:data})\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliveredOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({type: ORDER_DELIVERED_REQUEST})\r\n\r\n        const token = getState().userLogin.userInfo.token\r\n\r\n        const {data} = await axios.put(`/api/orders/${order._id}/delivered/`, {}, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        dispatch({type: ORDER_DELIVERED_SUCCESS, payload: data})\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: ORDER_DELIVERED_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst CheckOutSteps = ({step1,step2,step3,step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutSteps","import React, {useState} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../../containers/FormContainer'\r\nimport {saveShippingAddress} from '../../actions/cartActions'\r\n\r\nimport CheckOutsteps from '../CheckOutSteps'\r\n\r\nconst ShippingScreen = ({history}) => {\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n        <CheckOutsteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' className='mt-2'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, {useState} from 'react'\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../../containers/FormContainer'\r\nimport {savePaymentMethod} from '../../actions/cartActions'\r\nimport CheckOutSteps from '../CheckOutSteps'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address) {\r\n        history.goback()\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckOutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, {useEffect} from 'react'\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Message from '../Message'\r\nimport Loader from '../Loader'\r\nimport CheckOutsteps from '../CheckOutSteps'\r\nimport { createOrder } from '../../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../../constants/orderConstant'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {loading, order, error, success} = orderCreate\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [history,success, dispatch, order])\r\n    \r\n    const placeOrder = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n        {loading && <Loader/>}\r\n            <CheckOutsteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your Cart is Empty\r\n                            </Message>: (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item,index) => {\r\n                                        return <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    })}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                    \r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax: </Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total: </Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, {useEffect} from 'react'\r\nimport {Row, Col, ListGroup, Image, Card, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { PaystackButton } from 'react-paystack';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Message from '../Message'\r\nimport Loader from '../Loader'\r\nimport { getOrderDetails, payOrder, deliveredOrder } from '../../actions/orderActions'\r\nimport {ORDER_PAY_RESET, ORDER_DELIVERED_RESET} from '../../constants/orderConstant'\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {loading, order, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay, success:successPay } = orderPay\r\n\r\n    const orderDelivered = useSelector(state => state.orderDelivered)\r\n    const {loading:loadingDelivered, success:successDelivered } = orderDelivered\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n    \r\n    // FOR PAYSTACK IMPLEMENTATION\r\n    const config = {\r\n        reference: (new Date()).getTime(),\r\n        email: userInfo.email,\r\n        amount: parseInt(order.totalPrice*100),\r\n        publicKey: 'pk_test_931db6c54665877a14ec0a8a17843d29fec9215d',\r\n      }\r\n    const paystackSuccess = (reference) => {\r\n        dispatch(payOrder(orderId, reference))\r\n        console.log(reference)\r\n    }\r\n    const paystackClose = () => {\r\n        console.log(\"Closed\")\r\n    }\r\n\r\n    const componentProps = {\r\n        ...config,\r\n        text: 'Paystack Button Implementation',\r\n        onSuccess: (reference) => paystackSuccess(reference),\r\n        onClose: paystackClose,\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        \r\n        if(!order || successPay || order._id !== Number(orderId) || successDelivered){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVERED_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n\r\n    }, [dispatch, order, orderId, successPay, successDelivered])\r\n\r\n\r\n    const deliveredHandler = () => {\r\n        dispatch(deliveredOrder(order))\r\n    }\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) :(\r\n        <div>\r\n        <Link to='/profile'>\r\n            <Button>\r\n                Go Back\r\n            </Button>\r\n        </Link>\r\n        <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name:</strong> {order.user.name}</p>\r\n                            <p><strong>Email:</strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {' '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on: {order.deliveredAt}</Message>\r\n                            ): (\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on: {order.paidAt}</Message>\r\n                            ): (\r\n                                <Message variant='warning'>Not paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message>: (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item,index) => {\r\n                                        return <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    })}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                    \r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax: </Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total: </Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                    \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n                                    <PaystackButton {...componentProps} />                 \r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliveredHandler}\r\n                                >\r\n                                    Mark as deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {listUser, deleteUser} from '../../actions/userActions'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n\r\nconst UserListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, users, error} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete} = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUser())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, userInfo, history, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        console.log(window)\r\n        if(window.confirm('Are you sure you want to delete this user')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-md'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>  \r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{color:'green'}}></i>\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                )}</td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {USER_ADMIN_UPDATE_RESET} from '../../constants/userConstants'\r\nimport {userDetails, adminUpdateUser} from '../../actions/userActions'\r\nimport FormContainer from '../../containers/FormContainer'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const getUserDetails = useSelector(state => state.userDetails)\r\n    const {loading:loadingDetails, error:errorDetails, user:userDetail} = getUserDetails\r\n\r\n    const userAdminUpdate = useSelector(state => state.userAdminUpdate)\r\n    const {success:successAdmin, loading:loadingAdmin, error:errorAdmin, user:userAdmin} = userAdminUpdate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        if(successAdmin) {\r\n            dispatch({type:USER_ADMIN_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!userDetail || Number(userDetail._id) !== Number(userId)){\r\n            dispatch(userDetails(userId))\r\n        } else {\r\n            setName(userDetail.name)\r\n            setEmail(userDetail.email)\r\n            setIsAdmin(userDetail.isAdmin)\r\n            }\r\n        }\r\n        \r\n    },[dispatch, userId, userDetail, successAdmin, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(adminUpdateUser({_id:userDetail._id, name, email, isAdmin}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                <Button>\r\n                    Go Back\r\n                </Button>\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingAdmin && <Loader/>}\r\n                {errorAdmin && <Message variant='danger'>{errorAdmin}</Message>}\r\n                \r\n                {loadingDetails ? <Loader/> : errorDetails ? <Message variant='danger'>{errorDetails}</Message> \r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isAdmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            >\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button className='mt-2' block type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n\r\n                )}\r\n            </FormContainer>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {listProducts, deleteProduct} from '../../actions/productAction'\r\nimport { PRODUCT_CREATE_RESET } from '../../constants/productConstants'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n\r\nconst ProductListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, products, error} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading:loadingDelete, success:successDelete, error:errorDelete} = productDelete\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }else{\r\n            dispatch(listProducts())\r\n        }\r\n        \r\n    }, [dispatch, userInfo, history, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this product')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='justify-content-md-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-center'>\r\n                    <LinkContainer to={'/admin/product/create/'}>\r\n                        <Button className='my-3'>\r\n                            <i className='fas fa-plus'></i> Create Product\r\n                        </Button>\r\n                    </LinkContainer>\r\n                    \r\n                </Col>\r\n            \r\n            {/* {errorDelete && <Message variant='danger'>{errorDelete}</Message>} */}\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-md'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                        </tr>  \r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Button, Form} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport FormContainer from '../../containers/FormContainer'\r\nimport {createProduct} from '../../actions/productAction'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n\r\nconst ProductCreateScreen = ({history}) => {\r\n    const [name, setName] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [countInStock, setCountInStock] = useState('')\r\n    const [image, setImage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {\r\n        loading:loadingCreate, \r\n        product:createdProduct, \r\n        success:successCreate, \r\n        error:errorCreate} = productCreate\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push('/admin/productlist')\r\n        }\r\n        \r\n    }, [history, userInfo, successCreate, createdProduct])\r\n\r\n    const createProductHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            brand,\r\n            category,\r\n            description,\r\n            price,\r\n            countInStock,\r\n            image\r\n        }))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Create Product</h1>\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            <Form onSubmit={createProductHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Brand'\r\n                        value={brand}\r\n                        onChange={(e) => setBrand(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Image'\r\n                        value={image}\r\n                        onChange={(e) => setImage(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Category'\r\n                        value={category}\r\n                        onChange={(e) => setCategory(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        as='textarea'\r\n                        required\r\n                        type='text'\r\n                        placeholder='Description'\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Available Stock</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='number'\r\n                        placeholder='Available Stock'\r\n                        value={countInStock}\r\n                        onChange={(e) => setCountInStock(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='number'\r\n                        placeholder='Price'\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='mt-2' block type='submit' variant='primary'>\r\n                    Create Product\r\n                </Button>\r\n            </Form>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Button, Form} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport FormContainer from '../../containers/FormContainer'\r\nimport {updateProduct, listProductDetails} from '../../actions/productAction'\r\nimport { PRODUCT_UPDATE_RESET } from '../../constants/productConstants'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n\r\nconst ProductEditScreen = ({history, match}) => {\r\n    const [name, setName] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [countInStock, setCountInStock] = useState('')\r\n    const [uploadingImage, setUploadingImage] = useState(false)\r\n    const [image, setImage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productId = match.params.id\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {\r\n        loading:loadingUpdate, \r\n        success:successUpdate, \r\n        error:errorUpdate} = productUpdate\r\n    \r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {product:productDetail} = productDetails\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const token = userLogin.userInfo.token\r\n\r\n    useEffect(() => {\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else {\r\n            if (!productDetail || Number(productDetail._id) !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(productDetail.name)\r\n                setBrand(productDetail.brand)\r\n                setCategory(productDetail.category)\r\n                setDescription(productDetail.description)\r\n                setPrice(productDetail.price)\r\n                setCountInStock(productDetail.countInStock)\r\n                setImage(productDetail.image)\r\n            }\r\n        }\r\n        \r\n    }, [userInfo, dispatch, productDetail, productId, history, successUpdate])\r\n\r\n    const updateProductHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            brand,\r\n            category,\r\n            description,\r\n            price,\r\n            countInStock,\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        console.log(e)\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploadingImage(true)\r\n\r\n        try{\r\n            const data = await axios.post('/api/products/image-upload/', formData, {\r\n                headers: {\r\n                    'Content-type': 'multipart/form',\r\n                    Authorization: `Bearer ${token}` \r\n                }\r\n            })\r\n            console.log(data)\r\n            setImage(data.data)\r\n            setUploadingImage(false)\r\n\r\n        }catch(error){\r\n            setUploadingImage(false)\r\n        }\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n            <h1>Update Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            <Form onSubmit={updateProductHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Brand'\r\n                        value={brand}\r\n                        onChange={(e) => setBrand(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3' controlId='image'>\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Image'\r\n                        value={image}\r\n                        onChange={(e) => setImage(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                    <Form.File\r\n                        id='image-file'\r\n                        custom\r\n                        onChange={uploadFileHandler}\r\n                    >\r\n\r\n                    </Form.File>\r\n                    {uploadingImage && <Loader />}\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Category'\r\n                        value={category}\r\n                        onChange={(e) => setCategory(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        as='textarea'\r\n                        required\r\n                        type='text'\r\n                        placeholder='Description'\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Available Stock</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='number'\r\n                        placeholder='Available Stock'\r\n                        value={countInStock}\r\n                        onChange={(e) => setCountInStock(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='number'\r\n                        placeholder='Price'\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='mt-2' block type='submit' variant='primary'>\r\n                    Update Product\r\n                </Button>\r\n            </Form>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getListOrder} from '../../actions/orderActions'\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n\r\nconst OrderListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, orders, error} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(getListOrder())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, userInfo, history])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-md'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL PRICE</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>  \r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n\r\n                                <td>{order.isPaid ? (\r\n                                    order.paidAt.substring(0,10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n\r\n                                <td>{order.isDelivered ? (\r\n                                    order.deliveredAt.substring(0,10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport './index.css'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './components/screens/HomeScreen'\nimport ProductScreen from './components/screens/ProductScreen'\nimport CartScreen from './components/screens/CartScreen'\nimport LoginScreen from './components/screens/LoginScreen'\nimport RegisterScreen from './components/screens/RegisterScreen'\nimport ProfileScreen from './components/screens/ProfileScreen'\nimport ShippingScreen from './components/screens/ShippingScreen'\nimport PaymentScreen from './components/screens/PaymentScreen'\nimport PlaceOrderScreen from './components/screens/PlaceOrderScreen'\nimport OrderScreen from './components/screens/OrderScreen'\nimport UserListScreen from './components/screens/UserListScreen'\nimport UserEditScreen from './components/screens/UserEditScreen'\nimport ProductListScreen from './components/screens/ProductListScreen'\nimport ProductCreateScreen from './components/screens/ProductCreateScreen'\nimport ProductEditScreen from './components/screens/ProductEditScreen'\nimport OrderListScreen from './components/screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" exact component={HomeScreen}/>\n          <Route path=\"/product/:id\" component={ProductScreen}/>\n          <Route path=\"/cart/:id?\" component={CartScreen}/>\n          <Route path=\"/login\" component={LoginScreen}/>\n          <Route path=\"/register\" component={RegisterScreen}/>\n          <Route path=\"/profile\" component={ProfileScreen}/>\n          <Route path=\"/shipping\" component={ShippingScreen}/>\n          <Route path=\"/payment\" component={PaymentScreen}/>\n          <Route path=\"/placeorder\" component={PlaceOrderScreen}/>\n          <Route path=\"/order/:id\" component={OrderScreen}/>\n          <Route path=\"/admin/userlist\" component={UserListScreen}/>\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen}/>\n          <Route path=\"/admin/productlist\" component={ProductListScreen}/>\n          <Route path=\"/admin/product/create\" component={ProductCreateScreen}/>\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen}/>\n          <Route path=\"/admin/orderlist\" component={OrderListScreen}/>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nimport reducers from './reducers'\nimport './bootstrap.min.css'\nimport App from './App';\n\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? \n      JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromLocalStorage = localStorage.getItem('UserInfo') ? \n      JSON.parse(localStorage.getItem('UserInfo')) : null\n\nconst shippingAddressFromLocalStorage = localStorage.getItem('ShippingAddress') ? \n      JSON.parse(localStorage.getItem('ShippingAddress')) : {}\n\nconst initalState = {\n  cart: {cartItems: cartItemsFromLocalStorage, shippingAddress: shippingAddressFromLocalStorage},\n  userLogin: {userInfo: userInfoFromLocalStorage},\n}\n\nconst store = createStore(reducers, initalState, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}